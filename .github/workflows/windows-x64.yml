name: üèÅ windows-x64

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: "0 0 * * 0"

jobs:
  build-windows-x64:
    runs-on: windows-latest
    steps:
      - name: Checkout sources
        run: |
          git clone https://github.com/google/angle .

      - name: Fetch depot_tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git

      - name: Build
        shell: cmd
        run: |
          git config --global depot-tools.allowGlobalGitConfig false

          set PATH=%cd%\depot_tools;%PATH%
          set DEPOT_TOOLS_WIN_TOOLCHAIN=0
          set DEPOT_TOOLS_UPDATE=0
          set DEPOT_TOOLS_METRICS=0

          cmd /c gclient
          cmd /c python scripts/bootstrap.py
          cmd /c gclient sync
          cmd /c gn gen out/Release --args="is_debug=false target_cpu=\"x64\" angle_build_all=false"
          cmd /c autoninja -C out/Release

      - name: Pack
        shell: bash
        run: |
          mkdir angle-windows-x64
          mkdir angle-windows-x64/dist
          rm -rf out/Release/cdb
          rm -rf out/Release/gen
          rm -rf out/Release/obj
          rm -rf out/Release/args.gn
          rm -rf out/Release/build.ninja
          rm -rf out/Release/build.ninja.d
          rm -rf out/Release/toolchain.ninja
          rm -rf out/Release/environment.*
          find out/Release -name "*.pdb" -delete
          mv -f out/Release/* angle-windows-x64/dist/
          cp -rf include angle-windows-x64/
          find angle-windows-x64 -name ".clang-format" -delete
          find angle-windows-x64 -name "*.md" -delete

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: angle-windows-x64
          path: angle-windows-x64
